/*
Copyright 2020 Sanya K. Waffles

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


Class SHDX_BossSpot : SpecialSpot
{
	Default
	{
		//$Category "Monsters"
		//$Sprite internal:action
		//$Title "Boss Teleport Spot"
		
		+Invisible
	}
}

Class SHDX_SurpriseBoss : SHDX_Boss
{
	Default
	{
		//$Category "Monsters"
		//$Sprite SURPA0
		//$Title "Boss 1 - Ms. Surprise"
		
		Health 1500;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 0;
		
		PainChance "Explosive", 256;
		PainChance "Bullet", 256;
		DamageFactor "Bullet", 0.05;
		DamageFactor "Explosive", 0.75;
		DamageFactor "Chicken", 0.00;
		DamageFactor "ChickenX", 0.00;
		DamageFactor "Rainbower", 0.10;
		DamageFactor "RainbowerX", 0.10;
		DamageFactor "Ice", 0.00;
		// SeeSound "boss1/sight";
		PainSound "boss1/pain";
		DeathSound "boss1/death";
		// ActiveSound "boss1/active";
		Obituary "$SHDX_OB_SURPRISE";
		Tag "$SHDX_TAG_SURPRISE";
	
		+DONTRIP
		+NOICEDEATH
		
		
		+SHDX_Boss.TriggerLevelEnd
		+SHDX_Boss.TriggerCutscene
		
		SHDX_Boss.CutsceneToPlay 'EndEpisode1';
	}
	
	bool sentoneliner;
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		SeeSound = "boss1/sight"..Random[Surprise](1,3);
	}
	
	States
	{
		Spawn:
			SURP AA 10 A_Look;
			Loop;
		See:
			SURP A 0 A_SetInvulnerable;
			SURP A 0 A_StartSound(SeeSound, CHAN_VOICE, attenuation:ATTN_NONE);
			SURP A 35;
			SURP A 0 A_UnSetInvulnerable;
		See1:
			SURP A 0 A_SHDX_GivePlayerOneLiner(SHDX_ONELINER_BOSS_CHANCE, "surprisestart", OLSSF_FORCEONELINER);
		See2:
			SURP A 4 A_Chase(null, null, CHF_DONTMOVE);
			SURP A 4 A_Chase(null, null, CHF_DONTMOVE);
			SURP A 4 A_Chase(null, null, CHF_DONTMOVE);
			SURP A 4 A_Chase(null, null, CHF_DONTMOVE);
			SURP A 4 A_Chase(null, null, CHF_DONTMOVE);
			SURP A 0 A_Jump(96, "TeleportAbout");
			Loop;
		Missile:
			SURP B 3 A_FaceTarget;
			SURP C 0 A_StartSound("boss1/stomp", CHAN_WEAPON);
			SURP C 5 A_SpawnProjectile("SHDX_SurpriseTornado");
			SURP H 0 A_StartSound("boss1/taunt"..Random[Surprise](1,6), CHAN_VOICE, attenuation:ATTN_BOSSTAUNT);
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			goto TeleportAbout;
		JustTeleported:
			SURP D 3 A_SetTranslucent(1.0, 0);
			SURP D 3 A_StartSound("boss1/active", CHAN_VOICE, attenuation:ATTN_BOSSTAUNT);
			SURP A 3 A_Jump(128, "TeleportAbout");
			goto Missile;
		TeleportAbout:
			SURP A 2 A_SetTranslucent(0.5, 0);
			SURP A 1;
			SURP A 0 A_Teleport("JustTeleported", "SHDX_BossSpot", "SHDX_NoFlash", 0);
			SURP A 1;
			Goto See2;
		Pain.Bullet:
		Pain.Explosive:
			SURP A 5
			{
				A_StartSound("boss1/pain", CHAN_VOICE, attenuation:ATTN_BOSSTAUNT);
				A_SetRenderStyle(1.0, STYLE_Stencil);
				SetShade("6e0600");
			}
			SURP A 5
			{
				SetShade("f08010");
			}
			SURP A 5
			{
				SetShade("ffee6a");
			}
			SURP A 0
			{
				A_SetRenderStyle(1.0, STYLE_Normal);
				SetShade("ffffff");
			}
			Goto TeleportAbout;
		/*
		Pain.Bullet:
			SURP H 0 A_StartSound("boss1/laugh", CHAN_VOICE);
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			SURP HI 3;
			goto TeleportAbout;
			*/
		Death.Explosive:
		Death.Weather:
		Death.RainbowX:
		XDeath:
		Death:
			SURP A 0
			{
				A_SetRenderStyle(1.0, STYLE_Normal);
				SetShade("ffffff");
			}
			SURP E 0
			{
				A_NewBossScream();
				A_VictoryMusic();
			}
			SURP EFGFEFGFEFG 5;
			SURP L 5 A_NoBlocking;
			SURP M 5 A_SpawnGibsFx(self);
			SURP O 5;
			SURP O 0 A_SHDX_GivePlayerOneLiner(SHDX_ONELINER_BOSS_CHANCE, "surpriseend", OLSSF_FORCEONELINER);
			SURP P 105;
			SURP P 1 A_DD2_BossPlayCutscene();
			SURP P -1 A_DD2_BossEndLevel();
			Stop;
	}
}

Class SHDX_SurpriseTornado : SHDX_Projectile
{
	Default
	{
		Radius 16;
		Height 56;
		Speed 8;
		Damage 10;
		+MISSILE
		+DROPOFF
		+RIPPER
		+NOEXPLODEFLOOR
		+STEPMISSILE
		MaxStepHeight 16;
		Projectile;
		+SEEKERMISSILE
		+FLOORHUGGER
	}
	States
	{
		Spawn:
			TORN A 0
			{
				A_SeekerMissile(1, 15);
				A_StartSound("boss1/tornado", CHAN_BODY);
			}
			TORN ABCD 1;
			Loop;
		Death:
			TORN A 0
			{
				A_FadeTo(0.0, 0.1, true);
				A_SetScale((scale.X+0.1), scale.Y);
			}
			TORN ABCD 3;
			loop;
	}
	
	override void Tick()
	{
		Super.Tick();
		if (target.health <= 0 && !InStateSequence(CurState, ResolveState("Death")))
			SetStateLabel("Death");
	}
	
	// From Iron Lich...
	override int DoSpecialDamage (Actor thingtodmg, int damage, Name damagetype)
	{
		int randVal;

		if (!thingtodmg.bDontThrust)
		{
			thingtodmg.angle += Random2[TornadoDamage]() * (360 / 4096.);
			thingtodmg.Vel.X += Random2[TornadoDamage]() / 64.;
			thingtodmg.Vel.Y += Random2[TornadoDamage]() / 64.;
		}

		if ((Level.maptime & 16) && !thingtodmg.bBoss && !thingtodmg.bDontThrust)
		{
			randVal = min(160, random[WhirlwindSeek]());
			thingtodmg.Vel.Z += randVal / 32.;
			if (thingtodmg.Vel.Z > 12)
			{
				thingtodmg.Vel.Z = 12;
			}
		}
		if (!(Level.maptime & 7))
		{
			thingtodmg.DamageMobj (self.target, self.target, 15, 'Wind');
		}
		return -1;
	}
}