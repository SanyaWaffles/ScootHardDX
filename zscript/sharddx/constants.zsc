/*
Copyright 2020 Sanya K. Waffles

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

const SHDXFL_CHUNKFLAGS		=	SXF_TransferTranslation | SXF_NoCheckPosition;	// Constant flag for gibs
const SHDXFL_COINFLAGS		=	SXF_NoCheckPosition | SXF_AbsoluteVelocity;	// Constant flag for coins
const SHDXFL_AMMOFLAGSFX		=	SXF_TransferPointers | SXF_NoCheckPosition | SXF_AbsoluteVelocity;	// Constant flag for Ammo Dropping Calls
const SHDXPLAYER_VOICECHAN	=	CHAN_7 | CHAN_UI;	// Constant flag for Voice Overs (aren't savegame worthy)
const SHDXPLAYER_BODYCHAN	=	CHAN_BODY | CHAN_UI;	// Constant flag for Misc. Sound Effects on the 'body' channel (aren't savegame worthy)

const NAVY_MISSLE_SPAWNHEIGHT = 0;
const ENEMY_MISSILE_SPAWNEHEIGHT = 32;

const ATTN_BOSSTAUNT = 0.0; // 0.5;

// Constant for voice acting volume
const SHDXPLAYER_VOICEVOL		=	4.0;

const SHDXCHAN_POWERUP = 13;
const SHDXPLAYER_DIALOGUECHANNEL1 = 666;
const SHDXPLAYER_DIALOGUECHANNEL2 = 667;
const SHDXPLAYER_DIALOGUECHANNEL3 = 668;

// Constant for RIP Sound Obit volume
const SHDXPLAYER_RIPVOL		=	2.5;

const CHAN_VENDINGUSE = 9;
const CHAN_ARMORHIT = 99;

const SHDXRUNNINGOUTTICS = 140;

// Weapon Overlay IDs
// TODO: Add to Weapons class?
enum EDDOverlays
{
	SHDX_PSP_TOGGLEWEAP = -3,
	SHDX_PSP_FOOTCRUSH = -2,
	SHDX_PSP_STRIFEJAZZ,
	SHDX_PSP_NONE,
	SHDX_PSP_WEAPON,
	SHDX_PSP_WEAPON2,
	SHDX_PSP_WEAPONL1,
	SHDX_PSP_WEAPONL2,
	SHDX_PSP_MISC1,
	SHDX_PSP_MISC2,
	SHDX_PSP_FLASH = 1000,
	SHDX_PSP_FLASH2 = 1001,
	SHDX_PSP_FLASH3 = 1002,
	SHDX_PSP_FLASH4 = 1003,
};
